// © sikako

//@version=5
strategy("KC_整合", shorttitle = "KC", overlay = true, default_qty_type = strategy.percent_of_equity, default_qty_value = 100, commission_value = 0.04, initial_capital = 1000, max_bars_back = 5000)

// ---------------------------------------------
// date
var startTime = input.time(timestamp("1 Jan 2022 00:00 +0800"), "開始時間", group = "回測時間")
var endTime = input.time(timestamp("1 Jan 2024 00:00 +0800"), "結束時間", group = "回測時間")
window()  => time >= startTime and time <= endTime ? true : false
// ------------------------------------
var kc_length_same = input(defval = 310, title = "順勢 KC天數", group = "順勢參數")
var P_L_ratio_same = input(defval = 2.0, title = "順勢盈虧比", group = "順勢參數")
var kc_length_convert = input(defval = 170, title = "逆勢 KC天數", group = "逆勢參數")
var P_L_ratio_convert = input(defval = 1.0, title = "逆勢盈虧比", group = "逆勢參數")
var mult1_same = input(defval = 1.0, title = "KC1順勢乘數", group = "順勢參數")
var mult2_same = input(defval = 1.5, title = "KC2順勢乘數", group = "順勢參數")
var mult1_convert = input(defval = 1.5, title = "KC1逆勢乘數", group = "逆勢參數")
var mult2_convert = input(defval = 3.5, title = "KC2逆勢乘數", group = "逆勢參數")
var trail_threshold = input(defval = 5, title = "開啟套保門檻(%)", group = "止損") / 100.0
var tao_kai_cang = input(defval = 2, title = "開啟套開倉門檻(%)", group = "止損") / 100.0
var max_loss_rate = input(defval = 10.0, title = "單筆最大虧損率(%)", group = "止損") / 100.0


[middle_2_same, upper_2_same, lower_2_same] = ta.kc(close, kc_length_same, mult1_same)
[middle_3_same, upper_3_same, lower_3_same] = ta.kc(close, kc_length_same, mult2_same)
[middle_2_convert, upper_2_convert, lower_2_convert] = ta.kc(close, kc_length_convert, mult1_convert)
[middle_3_convert, upper_3_convert, lower_3_convert] = ta.kc(close, kc_length_convert, mult2_convert)

// KC 畫圖
plot(upper_3_convert, color=color.white, title = "KC3上軌")
plot(upper_2_convert, color=color.yellow, title = "KC2上軌")
plot(middle_2_convert, color=color.blue, title = "KC中軌")
plot(lower_2_convert, color=color.yellow, title = "KC2下軌")
plot(lower_3_convert, color=color.white, title = "KC3下軌")

// 綠棒--------------------------------------------------------------
g = close > open

// 上穿
crossover_upper_3_same = ta.crossover(close, upper_3_same)
crossover_upper_3_convert = ta.crossover(close, upper_3_convert)

// 紅棒-------------------------------------------------------------
r = close < open

// 下穿
crossunder_lower_3_same = ta.crossunder(close, lower_3_same)
crossunder_lower_3_convert = ta.crossunder(close, lower_3_convert)

// 穿中軸
cross_middle_same = ta.cross(close, middle_3_same)
cross_middle_convert = ta.cross(close, middle_3_convert)

crossover_lower_2_convert = ta.crossover(close, lower_2_convert)
crossunder_upper_2_convert = ta.crossunder(close, upper_2_convert)

// 趨勢 -----------------------------------------------------------------------
exit_bar_index = strategy.closedtrades.exit_bar_index(strategy.closedtrades - 1)
exit_bar_comment = strategy.closedtrades.exit_comment(strategy.closedtrades - 1)
exit_bar_id = strategy.closedtrades.exit_id(strategy.closedtrades - 1)
entry_bar_index = strategy.opentrades.entry_bar_index(strategy.opentrades - 1)
entry_bar_id = strategy.opentrades.entry_id(strategy.opentrades - 1)


var can_buy_same = 1
can_buy_same := nz(can_buy_same[1], 1)
if exit_bar_index == bar_index and (exit_bar_id == "exit_S_L" or exit_bar_id == "exit_S_S")
    can_buy_same := 0
if cross_middle_same
    can_buy_same := 1

var trend_same = 0
trend_same := nz(trend_same[1], 0)
if not can_buy_same
    trend_same := 0
else if can_buy_same
    if crossover_upper_3_same
        trend_same := 1
    else if crossunder_lower_3_same
        trend_same := -1





// ---------------------------------------------------------------------------



var trend_short_convert = 0
if bar_index == exit_bar_index and (nz(trend_short_convert[1], 0) == -1 and exit_bar_id == "exit_C_S")
    trend_short_convert := 0
else if entry_bar_id == "C_L"
    trend_short_convert := 0
else if crossover_upper_3_convert
    trend_short_convert := -1
else
    trend_short_convert := nz(trend_short_convert[1], 0)

var trend_long_convert = 0
if bar_index == exit_bar_index and (nz(trend_long_convert[1], 0) == 1 and exit_bar_id == "exit_C_L")
    trend_long_convert := 0
else if entry_bar_id == "C_S"
    trend_long_convert := 0
else if crossunder_lower_3_convert
    trend_long_convert := 1
else
    trend_long_convert := nz(trend_long_convert[1], 0)

var lowest_convert = 0.0
if crossunder_lower_3_convert and (lowest_convert == 0.0)
    lowest_convert := low
if trend_long_convert == 1
    lowest_convert := math.min(lowest_convert, low)
else if trend_long_convert != 1
    lowest_convert := 0.0

var highest_convert = 0.0
if crossover_upper_3_convert and (highest_convert == 0.0)
    highest_convert := high
if trend_short_convert == -1
    highest_convert := math.max(highest_convert, high)
else if trend_short_convert != -1
    highest_convert := 0.0


// 買賣訊號
buy_long_condition_same = (g and low > upper_3_same and trend_same == 1 and trend_same[1] == 1)
buy_short_conditin_same = (r and high < lower_3_same and trend_same == -1 and trend_same[1] == -1)
buy_short_condition_convert = trend_short_convert == -1 and trend_short_convert[1] != -1
buy_long_condition_convert = trend_long_convert == 1 and trend_long_convert[1] != 1


// 順勢交易策略
buyShortSignal_same = buy_short_conditin_same
buyLongSignal_same = buy_long_condition_same

// 逆勢交易策略
buyShortSignal_convert = crossunder_upper_2_convert and trend_short_convert == -1
buyLongSignal_convert = crossover_lower_2_convert and trend_long_convert == 1


plotshape(buy_long_condition_convert ? low : na, title = "做多開始", color = color.green, style = shape.circle, location = location.absolute, size = size.tiny)
plotshape(buy_short_condition_convert ? high : na, title = "做空開始", color = color.red, style = shape.circle, location = location.absolute, size = size.tiny)

plotshape(buyShortSignal_convert, size = size.huge, color = color.red, style = shape.arrowdown, location = location.abovebar)
plotshape(buyLongSignal_convert, size = size.huge, color = color.green, style = shape.arrowup, location = location.belowbar)

// 止損
tick_size = syminfo.mintick
last_entry_index_same = strategy.opentrades.entry_bar_index(strategy.opentrades - 1)
last_exit_index_same = strategy.closedtrades.exit_bar_index(strategy.closedtrades - 1)
middle_price_in_entry_long_same = middle_3_same[bar_index - last_entry_index_same]
middle_price_in_entry_short_same = middle_3_same[bar_index - last_entry_index_same]
stop_price_long_same = (strategy.position_avg_price - middle_price_in_entry_long_same)
stop_price_short_same = (middle_price_in_entry_short_same - strategy.position_avg_price)


since_buyLong_condition_convert = ta.barssince(buy_long_condition_convert)
since_buyLong_condition_convert := since_buyLong_condition_convert == 0 or na(since_buyLong_condition_convert) ? 0 : since_buyLong_condition_convert
since_buyShort_condition_convert = ta.barssince(buy_short_condition_convert)
since_buyShort_condition_convert := since_buyShort_condition_convert == 0 or na(since_buyShort_condition_convert) ? 0 : since_buyShort_condition_convert
stop_price_long_convert = (strategy.position_avg_price - lowest_convert)
stop_price_short_convert = (highest_convert - strategy.position_avg_price)

plot(trend_long_convert == 1 ? lowest_convert : na, title = "逆勢做多止損價", color = color.green, style = plot.style_linebr)
plot(trend_short_convert == -1 ? highest_convert : na, title = "逆勢做空止損價", color = color.red, style = plot.style_linebr)

// 當前未實現盈虧 ------------------------
openprofit = strategy.opentrades.profit(strategy.opentrades -1)
// 開倉投入量
entry_price = strategy.position_size * strategy.opentrades.entry_price( strategy.opentrades - 1)
// 獲利%
openprofit_percent = openprofit / math.abs(entry_price)

// plot(openprofit)
// plot(entry_price)
// plot(openprofit_percent, color=color.aqua)
// max_bars_back(openprofit, 5000)
// max_bars_back(entry_price, 5000)



// 計算套保價格
get_trail_price(direction) =>
    if direction == "L"
        strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 + trail_threshold)
    else if direction == "S"
        strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 - trail_threshold)

// 計算虧損%價格
float min_loss_price = na
get_loss_price(direction) =>
    if direction == "L"
        strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 - max_loss_rate)
    else if direction == "S"
        strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 + max_loss_rate)

// 計算套開倉價格
get_tao_price(direction) =>
    if direction == "L"
        strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 + tao_kai_cang)
    else if direction == "S"
        strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 - tao_kai_cang)   

// 套保價格
plot(entry_bar_id == "C_S" or entry_bar_id == "S_S" ? get_trail_price("S") : na,linewidth=2, style=plot.style_linebr, title = "空單套保價格", color = color.blue)
plot(entry_bar_id == "C_L" or entry_bar_id == "S_L" ? get_trail_price("L") : na,linewidth=2, style=plot.style_linebr, title = "多單套保價格", color = color.blue)

// 最大虧損止損價格
plot(entry_bar_id == "C_S" or entry_bar_id == "S_S" ? get_loss_price("S") : na,linewidth=2, style=plot.style_linebr, color = color.aqua, title = "空單最大虧損止損價格")
plot(entry_bar_id == "C_L" or entry_bar_id == "S_L" ? get_loss_price("L") : na,linewidth=2, style=plot.style_linebr, color = color.aqua, title = "多單最大虧損止損價格")
// plot(entry_bar_id == "C_L" or entry_bar_id == "S_L" ? strategy.opentrades.entry_price( strategy.opentrades - 1) * (1.0 + trail_threshold) : na,linewidth=2, style=plot.style_linebr)
// get_trail_offset(the_type, direction) =>   
//     strategy.opentrades.entry_price( strategy.opentrades - 1) * trail_percent / tick_size

// 順勢--------------------------------------------------------------------------
if window()
    if buyLongSignal_convert and (strategy.position_size == 0 or entry_bar_id == "S_L" or entry_bar_id == "S_S")
        strategy.entry("C_L", strategy.long)
    else if buyShortSignal_convert and (strategy.position_size == 0 or entry_bar_id == "S_L" or entry_bar_id == "S_S")
        strategy.entry("C_S", strategy.short)
    else if buyLongSignal_same  and strategy.position_size == 0
        strategy.entry("S_L", strategy.long)
    else if buyShortSignal_same and strategy.position_size == 0
        strategy.entry("S_S", strategy.short)


    if entry_bar_id == "S_L"
        if (get_loss_price("L") < stop_price_long_same)
            min_loss_price :=  get_loss_price("L")
        else
            min_loss_price := stop_price_long_same
        strategy.exit("exit_S_L", "S_L", profit = stop_price_long_same/tick_size*P_L_ratio_same, loss = min_loss_price/tick_size, comment_profit = "S_L_profit", comment_loss = "S_L_loss")

    else if entry_bar_id == "S_S"
        if (get_loss_price("S") < stop_price_short_same)
            min_loss_price := get_loss_price("S")
        else
            min_loss_price := stop_price_short_same
        strategy.exit("exit_S_S", "S_S", profit = stop_price_short_same/tick_size*P_L_ratio_same, loss = min_loss_price/tick_size, comment_profit = "S_S_profit", comment_loss = "S_S_loss")

    else if entry_bar_id == "C_L"
        if (get_loss_price("L") < stop_price_long_convert)
            min_loss_price := get_loss_price("L")
        else
            min_loss_price := stop_price_long_convert
        strategy.exit("exit_C_L", "C_L", profit = stop_price_long_convert/tick_size*P_L_ratio_convert, loss = min_loss_price/tick_size, comment_profit = "C_L_profit", comment_loss = "C_L_loss") 

    else if entry_bar_id == "C_S"
        if (get_loss_price("S") < stop_price_short_convert)
            min_loss_price := get_loss_price("S")
        else
            min_loss_price := stop_price_short_convert
        strategy.exit("exit_C_S", "C_S", profit = stop_price_short_convert/tick_size*P_L_ratio_convert, loss = min_loss_price/tick_size, comment_profit = "C_S_profit", comment_loss = "C_S_loss")


    // 套保
    if strategy.opentrades.entry_id(strategy.opentrades - 1) == "S_L" and close > get_trail_price("L")
        strategy.exit("exit_S_L", "S_L", profit = stop_price_long_same/tick_size*P_L_ratio_same, stop = get_trail_price("L"), comment_profit = "S_L_profit", comment_loss = "trail")
    else if strategy.opentrades.entry_id(strategy.opentrades - 1) == "S_S" and close < get_trail_price("S")
        strategy.exit("exit_S_S", "S_S", profit = stop_price_short_same/tick_size*P_L_ratio_same, stop = get_trail_price("S"), comment_profit = "S_S_profit", comment_loss = "trail")
    else if strategy.opentrades.entry_id(strategy.opentrades - 1) == "C_L" and close > get_trail_price("L")
        strategy.exit("exit_C_L", "C_L", profit = stop_price_long_convert/tick_size*P_L_ratio_convert, stop = get_trail_price("L"), comment_profit = "C_L_profit", comment_loss = "trail")
    else if strategy.opentrades.entry_id(strategy.opentrades - 1) == "C_S" and close < get_trail_price("S")
        strategy.exit("exit_C_S", "C_S", profit = stop_price_short_convert/tick_size*P_L_ratio_convert, stop = get_trail_price("S"), comment_profit = "C_S_profit", comment_loss = "trail")

    // 套開倉
    if strategy.opentrades.entry_id(strategy.opentrades - 1) == "S_L" and close > get_tao_price("L")
        strategy.exit("exit_S_L", "S_L", profit = stop_price_long_same/tick_size*P_L_ratio_same, loss = -300, comment_profit = "S_L_profit", comment_loss = "tao")
    else if strategy.opentrades.entry_id(strategy.opentrades - 1) == "S_S" and close < get_tao_price("S")
        strategy.exit("exit_S_S", "S_S", profit = stop_price_short_same/tick_size*P_L_ratio_same, loss = -300, comment_profit = "S_S_profit", comment_loss = "tao")
    else if strategy.opentrades.entry_id(strategy.opentrades - 1) == "C_L" and close > get_tao_price("L")
        strategy.exit("exit_C_L", "C_L", profit = stop_price_long_convert/tick_size*P_L_ratio_convert, loss = -300, comment_profit = "C_L_profit", comment_loss = "tao")
    else if strategy.opentrades.entry_id(strategy.opentrades - 1) == "C_S" and close < get_tao_price("S")
        strategy.exit("exit_C_S", "C_S", profit = stop_price_short_convert/tick_size*P_L_ratio_convert, loss = -300, comment_profit = "C_S_profit", comment_loss = "tao")
